export { C as ComputeViewResult, c as computeView, a as computeViews, u as unsafeComputeView } from '../shared/core.DbfQeUKm.mjs';
export { c as computeRelationshipsView } from '../shared/core.3L0y_SNW.mjs';
import { L as LikeC4View, C as ComputedLikeC4Model, a as ComputedView } from '../shared/core.BreLKHbT.mjs';
import 'type-fest';
import '../shared/core.Bhx0OGK8.mjs';

/**
 * Resolve rules of extended views
 * (Removes invalid views)
 */
declare function resolveRulesExtendedViews<V extends Record<any, LikeC4View>>(unresolvedViews: V): V;

/**
 * Convert hashed edge ids to human-readable
 * Mostly for testing purposes
 */
declare function withReadableEdges<T extends ComputedView>({ edges, nodes, ...view }: T, separator?: string): T & {
    nodeIds: string[];
    edgeIds: string[];
};
declare function viewsWithReadableEdges<M extends ComputedLikeC4Model>({ views, ...model }: M): M;

export { resolveRulesExtendedViews, viewsWithReadableEdges, withReadableEdges };
