import { t as toSet, i as ifind } from './core.FFJhmauw.mjs';

function computeRelationshipsView(subjectId, likec4model) {
  const subject = likec4model.element(subjectId);
  let relationships = {
    incoming: [...subject.incoming()],
    outgoing: [...subject.outgoing()]
  };
  const subjectSiblings = toSet(subject.ascendingSiblings());
  const isSubjectSibling = (e) => subjectSiblings.has(e);
  const subjects = /* @__PURE__ */ new Set([subject]);
  const incomers = new Set(relationships.incoming.flatMap((r) => {
    subjects.add(r.target);
    if (subjectSiblings.has(r.source)) {
      return [r.source];
    }
    const parent = ifind(r.source.ancestors(), isSubjectSibling);
    return parent ? [r.source, parent] : [r.source];
  }));
  const outgoers = new Set(relationships.outgoing.flatMap((r) => {
    subjects.add(r.source);
    if (subjectSiblings.has(r.target)) {
      return [r.target];
    }
    const parent = ifind(r.target.ancestors(), isSubjectSibling);
    return parent ? [r.target, parent] : [r.target];
  }));
  return {
    incomers,
    incoming: new Set(relationships.incoming),
    subjects,
    outgoing: new Set(relationships.outgoing),
    outgoers
  };
}

export { computeRelationshipsView as c };
