export { A as AsFqn, B as BorderStyles, U as ComputedNode, V as ComputedView, Q as DefaultArrowType, D as DefaultElementShape, S as DefaultLineStyle, g as DefaultPaddingSize, T as DefaultRelationshipColor, h as DefaultShapeSize, j as DefaultTextSize, c as DefaultThemeColor, d as DeploymentElement, W as DiagramNode, E as ElementKind, k as ElementShapes, H as ExpressionV2, I as FqnExpr, J as FqnRef, R as RelationExpr, X as extractStep, Y as getBBoxCenter, Z as getParallelStepsPrefix, K as isAndOperator, _ as isAutoLayoutDirection, l as isCustomElement, m as isCustomRelationExpr, $ as isDeploymentView, a0 as isDynamicView, a1 as isDynamicViewParallelSteps, p as isElement, q as isElementKindExpr, b as isElementPredicateExpr, r as isElementRef, s as isElementTagExpr, a as isElementView, t as isElementWhere, u as isExpandedElementExpr, i as isExtendsElementView, w as isInOut, v as isIncoming, L as isKindEqual, M as isNotOperator, N as isOrOperator, x as isOutgoing, y as isRelation, z as isRelationExpression, C as isRelationPredicateExpr, F as isRelationWhere, e as isScopedElementView, a2 as isStepEdgeId, O as isTagEqual, a3 as isViewRuleAutoLayout, a4 as isViewRuleGlobalPredicateRef, a5 as isViewRuleGlobalStyle, a6 as isViewRuleGroup, a7 as isViewRulePredicate, a8 as isViewRuleStyle, G as isWildcard, a9 as stepEdgeId, P as whereOperatorAsPredicate } from '../shared/core.BNaXALvz.mjs';

const ThemeColors = [
  "amber",
  "blue",
  "gray",
  "slate",
  "green",
  "indigo",
  "muted",
  "primary",
  "red",
  "secondary",
  "sky"
];
function isThemeColor(color) {
  return color in ThemeColors;
}

export { ThemeColors, isThemeColor };
