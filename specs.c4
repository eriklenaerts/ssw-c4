/*
C4 model for the Streamliner Cloud Product
The syntax is based on https://likec4.dev/ a more practical and flexible variant of C4. 

Created by Erik Lenaerts (erik.lenaerts@streamsoftware.be)
*/
specification {  
  // Tags
  tag external 
  tag depcrecated
  tag future
  tag support
  tag middleware
  tag infrastructure
 
   // Elements
  element enterprise {
    notation 'Enterprise'
    style {
      opacity 15%
    }
  }

  element platform {
    notation 'Platform'
    style {
      opacity 25%
    }
  } 

  element product {
    notation 'Product'
    style {
      opacity 25%
    }
  } 

  element application {
    notation 'Application'
    style {
      color primary
      opacity 35%
    }
  }

  element businessModule {
    notation 'Business Module'
    style {
      color primary
      opacity 35%
    }
  }

  element system {
    notation 'System'
    style {
      color muted
      opacity 15%
    }
  }

  element externalSystem {
    notation 'External System'
    style {
      color slate
      opacity 15%
    }
  }

  element api {
    notation 'API'
    style {
      opacity 20%
    }
  }

  element container {
    notation 'Container'
    style {
      opacity 20%
    }
  }

  element service {
    notation 'Service'
    style {
      opacity 20%
    }
  }
  
  element component

  element mobileApp {
    notation 'Mobile App'
    style {
      shape mobile
    }
  }

  element webApp {
    notation 'Web App'
    style {
      shape browser
    }
  }

  element person {
    notation 'Person'
    style {
      color sky
      shape person
    }
  }

  element staff {
    notation 'Person, Stream Software Staff'
    style {
      color slate
      shape person
    }
  }

  element dataStorage {
    notation 'Data storage'
    style {
      shape storage
    }
  }

// Wanted to style all lines by default as a solid line
/*   relationship * <-> * {
     line solid 
  }
 */
  relationship async {
    notation 'Async communication'
    line dotted
    color secondary
    head vee
  }
}

global {
    predicateGroup as-is {
        exclude * -> * 
            where tag = #future
        exclude * 
            where tag = #future
        include * -> * 
            where tag = #depcrecated with {
                notation 'deprecated'
                color amber
            }
        include * 
            where tag = #depcrecated with {
                notation 'deprecated'
                color amber
            }
    }

    predicateGroup to-be {
        exclude * -> * 
            where tag = #depcrecated
        exclude * 
            where tag = #depcrecated
        include * -> * 
            where tag = #future with {
                notation 'future'
                color green
            }
        include * 
            where tag = #future with {
                notation 'future'
                color green
            }
    }
}