model {
    extend streamSoftware {
        staff supportStaff "Support staff" {
            #support
            description "Customer support staff within Stream Softwarer"
        }
        
        system supportSystem "Customer support system" {
            #support
            description "The system to manage customer support requests, tickets, etc."
        }

        platform platform "Platform" {
            description "The streamliner cloud common platform capabilities."
        }

        product customsProduct "Customs product" {
            description "The streamliner cloud product for customs delcarations."
        }

        product logisticsProduct "Logistics, Finance & Accounting product" { #future }
    }

    supportStaff -> supportSystem "Uses this to follow up on support cases" { #support}
    supportStaff -> customsProduct "Assist in customer cases" { #support}
    customsProduct -> platform "Relies on"
}

views {
    view streamSoftwareAsIs of streamSoftware {
        title "Stream Software As Is landscape"
        description 'Shows the systems and products of Stream Sowftare and how they interact with other parties.'
        include 
            *,
            customer.person
        exclude * where tag is #future
        include customer.person -> streamSoftware.customsProduct with  {
            title "Manage declarations"
        }
    }

    view streamSoftwareToBe of streamSoftware {
        title "Stream Software To Be landscape"
        description 'Shows the systems and products of Stream Sowftare and how they interact with other parties.'
        include 
            *,
            customer.person
        
        include customer.person -> streamSoftware.customsProduct with  {
            title "Manage declarations"
        }

        style element.tag = #future {
            notation "Future"
            color green
        }

    }
}